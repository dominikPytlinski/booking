type User {
    id: ID!
    email: String!
    password: String
    role: Role!
}

type Role {
    id: ID!
    role: String!
}

type Event {
    id: ID!
    title: String!
    description: String!
    date: String!
    creator: User!
}

type Booking {
    id: ID!
    user: User!
    event: Event!
}

input userInput {
    email: String!
    password: String!
    roleId: String!
}

input roleInput {
    role: String!
}

input eventInput {
    title: String!
    description: String!
    date: String!
}

input bookingInput {
    userId: ID!
    eventId: ID!
}

type Mutation {
    createUser(input: userInput): User!
    createRole(input: roleInput): Role!
    createEvent(input: eventInput): Event!
    bookEvent(input: bookingInput): Booking!
}

type Query {
    user(id: ID!): User!
    users: [User!]!
    event(id: ID!): Event!
    events: [Event!]!
}